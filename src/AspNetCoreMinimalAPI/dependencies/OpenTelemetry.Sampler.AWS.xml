<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenTelemetry.Sampler.AWS</name>
    </assembly>
    <members>
        <member name="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSampler">
            <summary>
            Remote sampler that gets sampling configuration from AWS X-Ray.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSampler.Builder(OpenTelemetry.Resources.Resource)">
            <summary>
            Initializes a <see cref="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder"/> for the sampler.
            </summary>
            <param name="resource">an instance of <see cref="T:OpenTelemetry.Resources.Resource"/>
            to identify the service attributes for sampling. This resource should
            be the same as what the OpenTelemetry SDK is configured with.</param>
            <returns>an instance of <see cref="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder"/>.</returns>
        </member>
        <member name="M:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSampler.ShouldSample(OpenTelemetry.Trace.SamplingParameters@)">
            <inheritdoc/>
        </member>
        <member name="M:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSampler.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder">
            <summary>
            A builder for AWSXRayRemoteSampler.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder.SetPollingInterval(System.TimeSpan)">
            <summary>
            Sets the polling interval for configuration updates. If unset, defaults to 5 minutes.
            Must be positive.
            </summary>
            <param name="pollingInterval">the polling interval.</param>
            <returns>the same instance of <see cref="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder"/>.</returns>
            <exception cref="T:System.ArgumentException">if the argument is non-positive.</exception>
        </member>
        <member name="M:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder.SetEndpoint(System.String)">
            <summary>
            Sets the endpoint for the TCP proxy to connect to. This is the address to the port on the
            OpenTelemetry Collector configured for proxying X-Ray sampling requests.If unset, defaults to
            <see cref="F:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder.DefaultEndpoint"/>.
            </summary>
            <param name="endpoint">the endpoint for the TCP proxy.</param>
            <returns>the same instance of <see cref="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder"/>.</returns>
        </member>
        <member name="M:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSamplerBuilder.Build">
            <summary>
            Returns a <see cref="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSampler"/> with configuration of this builder.
            </summary>
            <returns>an instance of <see cref="T:OpenTelemetry.Sampler.AWS.AWSXRayRemoteSampler"/>.</returns>
        </member>
        <member name="T:OpenTelemetry.Internal.Guard">
            <summary>
            Methods for guarding against exception throwing values.
            </summary>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNull(System.Object,System.String)">
            <summary>
            Throw an exception if the value is null.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNullOrEmpty(System.String,System.String)">
            <summary>
            Throw an exception if the value is null or empty.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNullOrWhitespace(System.String,System.String)">
            <summary>
            Throw an exception if the value is null or whitespace.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfZero(System.Int32,System.String,System.String)">
            <summary>
            Throw an exception if the value is zero.
            </summary>
            <param name="value">The value to check.</param>
            <param name="message">The message to use in the thrown exception.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfInvalidTimeout(System.Int32,System.String)">
            <summary>
            Throw an exception if the value is not considered a valid timeout.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfOutOfRange(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String)">
            <summary>
            Throw an exception if the value is not within the given range.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
            <param name="min">The inclusive lower bound.</param>
            <param name="max">The inclusive upper bound.</param>
            <param name="minName">The name of the lower bound.</param>
            <param name="maxName">The name of the upper bound.</param>
            <param name="message">An optional custom message to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfOutOfRange(System.Double,System.String,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>
            Throw an exception if the value is not within the given range.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
            <param name="min">The inclusive lower bound.</param>
            <param name="max">The inclusive upper bound.</param>
            <param name="minName">The name of the lower bound.</param>
            <param name="maxName">The name of the upper bound.</param>
            <param name="message">An optional custom message to use in the thrown exception.</param>
        </member>
        <member name="M:OpenTelemetry.Internal.Guard.ThrowIfNotOfType``1(System.Object,System.String)">
            <summary>
            Throw an exception if the value is not of the expected type.
            </summary>
            <param name="value">The value to check.</param>
            <param name="paramName">The parameter name to use in the thrown exception.</param>
            <typeparam name="T">The type attempted to convert to.</typeparam>
            <returns>The value casted to the specified type.</returns>
        </member>
        <member name="T:OpenTelemetry.Trace.SemanticConventions">
            <summary>
            Constants for semantic attribute names outlined by the OpenTelemetry specifications.
            <see href="https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/README.md"/>.
            </summary>
        </member>
    </members>
</doc>
